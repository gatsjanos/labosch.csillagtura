os: linux
language: java
env:
  global:
    - SHORT_COMMIT_HASH=${TRAVIS_COMMIT::10}
    - IMAGE_NAME_TAG=${DOCKER_USERNAME}/laboschqpa-server:${SHORT_COMMIT_HASH}
#    - DEPLOY_TO_KSZK=true

install: skip
script: skip

jobs:
  include:
    - stage: DockerBuild
      services:
        - docker
      script: skip
      before_install:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        - IMAGE_NAME_CACHE_BUILDER=${DOCKER_USERNAME}/laboschqpa-server:builder
        - IMAGE_NAME_CACHE_FINAL=${DOCKER_USERNAME}/laboschqpa-server
      install:
        - docker pull ${IMAGE_NAME_CACHE_BUILDER} || true
        - docker pull ${IMAGE_NAME_CACHE_FINAL} || true

        - docker build --target=builder_image --cache-from ${IMAGE_NAME_CACHE_BUILDER} -t ${IMAGE_NAME_CACHE_BUILDER} -f docker/Dockerfile-k8s_dev-travis_build .
        - docker push ${IMAGE_NAME_CACHE_BUILDER}
        - docker build --cache-from ${IMAGE_NAME_CACHE_BUILDER} --cache-from ${IMAGE_NAME_CACHE_FINAL} -t ${IMAGE_NAME_CACHE_FINAL} -t ${IMAGE_NAME_TAG} -f docker/Dockerfile-k8s_dev-travis_build .
        - docker push ${IMAGE_NAME_CACHE_FINAL}
        - docker push ${IMAGE_NAME_TAG}

    - stage: DeployToKSZK
#      if: branch = master
      if: env(DEPLOY_TO_KSZK) = "true"
      script: skip
      install:
        - echo "Installing kubectl"
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/$(uname | awk '{print tolower($0)}')/amd64/kubectl
        - chmod +x ./kubectl
        - sudo mv ./kubectl /usr/local/bin/kubectl

        - echo "Configuring kubectl"
        - echo $KSZK_SECRET_CA > ca-KSZK.pem
        - kubectl config set-cluster KSZK --server=https://api.k8s.sch.bme.hu --certificate-authority=ca-KSZK.pem
        - kubectl config set-credentials $KSZK_SECRET_SCH_ACCOUNT
          --auth-provider=oidc
          --auth-provider-arg=idp-issuer-url=https://auth.k8s.sch.bme.hu/
          --auth-provider-arg=client-id=oidc-auth-client
          --auth-provider-arg=client-secret=$KSZK_SECRET_AUTH_PROVIDER_CLIENT_SECRET
          --auth-provider-arg=refresh-token=$KSZK_SECRET_AUTH_PROVIDER_REFRESH_TOKEN
          --auth-provider-arg=id-token=$KSZK_SECRET_AUTH_PROVIDER_ID_TOKEN
        - kubectl config set-context KSZK --cluster=KSZK --user=$KSZK_SECRET_SCH_ACCOUNT
        - kubectl config use-context KSZK

        - echo "Starting deployment"
        - kubectl --insecure-skip-tls-verify -n=csillagtura-sch-bme-hu set image deployments/server server=${IMAGE_NAME_TAG}